# BizOSaaS Platform - Core Infrastructure + Essential Services
# Includes infrastructure + auth, CRM, Saleor, and Wagtail services

services:
  # ===========================================
  # INFRASTRUCTURE SERVICES
  # ===========================================
  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: bizosaas-postgres-unified
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Bizoholic2024Alagiri
      POSTGRES_DB: bizosaas
      POSTGRES_MULTIPLE_DATABASES: wagtail,saleor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./infrastructure/database/create-multiple-dbs.sh:/docker-entrypoint-initdb.d/02-create-multiple-dbs.sh
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bizosaas"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: bizosaas-redis-unified
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ===========================================
  # AI BRAIN CENTRAL HUB
  # ===========================================
  bizosaas-brain:
    build:
      context: ./ai/services/bizosaas-brain
      dockerfile: Dockerfile
    container_name: bizosaas-brain-unified
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy-key}
      JWT_SECRET: ${JWT_SECRET:-bizosaas-central-secret-key}
      SECRET_KEY: bizosaas-brain-secret-key-production
      ENVIRONMENT: production
      ENABLE_METRICS: "1"
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@bizosaas.com}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    volumes:
      - ./ai/services/bizosaas-brain:/app
      - /app/__pycache__
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ===========================================
  # BACKEND SERVICES
  # ===========================================

  # Auth Service v2 (Port 8007)
  auth-service:
    build:
      context: ./core/services/auth-service-v2
      dockerfile: Dockerfile
    container_name: bizosaas-auth-unified
    ports:
      - "8007:8007"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/1
      JWT_SECRET: ${JWT_SECRET:-bizosaas-central-secret-key}
      SECRET_KEY: auth-service-secret-key-production
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Saleor E-commerce Backend (Port 8000)
  saleor-backend:
    image: ghcr.io/saleor/saleor:3.20
    container_name: bizosaas-saleor-unified
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/saleor
      REDIS_URL: redis://redis:6379/3
      SECRET_KEY: saleor-secret-key-production
      DEBUG: "0"
      ALLOWED_HOSTS: localhost,127.0.0.1,saleor-backend,bizosaas.local
      DEFAULT_FROM_EMAIL: noreply@bizosaas.com
      ENABLE_ACCOUNT_CONFIRMATION_BY_EMAIL: "false"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Wagtail CMS (Port 8006)
  wagtail-cms:
    build:
      context: ./core/services/wagtail-cms
      dockerfile: Dockerfile
    container_name: bizosaas-wagtail-unified
    ports:
      - "8006:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/wagtail
      REDIS_URL: redis://redis:6379/2
      SECRET_KEY: wagtail-secret-key-production
      DEBUG: "0"
      ALLOWED_HOSTS: localhost,127.0.0.1,wagtail-cms,bizosaas.local
      DJANGO_LOG_LEVEL: INFO
      LOGGING_USE_CONSOLE: "1"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

  # Django CRM Service (Port 8008)
  django-crm:
    build:
      context: ./crm/services/django-crm
      dockerfile: Dockerfile
    container_name: bizosaas-django-crm-unified
    ports:
      - "8008:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/4
      SECRET_KEY: django-crm-secret-key-production
      DEBUG: "0"
      ALLOWED_HOSTS: localhost,127.0.0.1,django-crm,bizosaas.local
      DJANGO_LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Temporal Workflow Orchestration (Port 8009)
  temporal-orchestration:
    build:
      context: ./integration/services/temporal-orchestration
      dockerfile: Dockerfile
    container_name: bizosaas-temporal-unified
    ports:
      - "8009:8009"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/5
      TEMPORAL_HOST: localhost
      TEMPORAL_PORT: 7233
      SECRET_KEY: temporal-secret-key-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SQLAdmin Dashboard (Port 8005)
  sqladmin-dashboard:
    build:
      context: ./admin/services/sqladmin-dashboard
      dockerfile: Dockerfile
    container_name: bizosaas-sqladmin-unified
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      SECRET_KEY: sqladmin-secret-key-production
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===========================================
# NETWORKS & VOLUMES
# ===========================================
networks:
  bizosaas-platform-network:
    driver: bridge
    name: bizosaas-platform-network

volumes:
  postgres_data:
    name: bizosaas-postgres-data
  redis_data:
    name: bizosaas-redis-data