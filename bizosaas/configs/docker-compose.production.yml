version: '3.8'

# BizOSaaS Production Environment
# Standardized naming convention: bizosaas-[service-name]
# Project identifier: bizosaas

services:
  # === SHARED INFRASTRUCTURE ===
  bizosaas-postgres:
    image: ankane/pgvector:v0.5.1
    container_name: bizosaas-postgres-main
    restart: unless-stopped
    environment:
      POSTGRES_DB: bizoholic
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: BizoholicSecure2025
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5433:5432"
    volumes:
      - bizosaas_postgres_data:/var/lib/postgresql/data
      - ./database/init-databases.sql:/docker-entrypoint-initdb.d/01-init-databases.sql
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=false"
      - "bizosaas.service.category=infrastructure"
      - "bizosaas.service.name=postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d bizoholic"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-redis:
    image: redis:7-alpine
    container_name: bizosaas-redis-main
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - bizosaas_redis_data:/data
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=false"
      - "bizosaas.service.category=infrastructure"
      - "bizosaas.service.name=redis"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-vault:
    image: hashicorp/vault:1.15
    container_name: bizosaas-vault-main
    restart: unless-stopped
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    volumes:
      - bizosaas_vault_data:/vault/data
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=false"
      - "bizosaas.service.category=infrastructure"
      - "bizosaas.service.name=vault"

  # === CORE SERVICES ===
  bizosaas-ai-agents:
    build:
      context: ./services/ai-agents
      dockerfile: Dockerfile
    image: bizosaas/ai-agents:latest
    container_name: bizosaas-ai-agents-main
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/bizoholic
      - REDIS_URL=redis://bizosaas-redis:6379/0
      - VAULT_URL=http://bizosaas-vault:8200
      - ENVIRONMENT=production
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-agents.rule=Host(`localhost`) && PathPrefix(`/api/agents`)"
      - "traefik.http.services.ai-agents.loadbalancer.server.port=8000"
      - "bizosaas.service.category=core"
      - "bizosaas.service.name=ai-agents"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-crm:
    build:
      context: ./services/django-crm
      dockerfile: Dockerfile
    image: bizosaas/crm:latest
    container_name: bizosaas-crm-main
    restart: unless-stopped
    ports:
      - "8007:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/bizoholic
      - REDIS_URL=redis://bizosaas-redis:6379/1
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=crm_project.settings.production
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crm.rule=Host(`localhost`) && PathPrefix(`/api/crm`)"
      - "traefik.http.services.crm.loadbalancer.server.port=8000"
      - "bizosaas.service.category=core"
      - "bizosaas.service.name=crm"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-temporal:
    image: temporalio/auto-setup:1.20.0
    container_name: bizosaas-temporal-main
    restart: unless-stopped
    ports:
      - "8202:7233"
      - "8233:8233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PWD=BizoholicSecure2025
      - POSTGRES_SEEDS=bizosaas-postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    volumes:
      - ./services/temporal-integration/config:/etc/temporal/config
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "bizosaas.service.category=core"
      - "bizosaas.service.name=temporal"

  bizosaas-vault-service:
    build:
      context: ./services/vault-integration
      dockerfile: Dockerfile
    image: bizosaas/vault-service:latest
    container_name: bizosaas-vault-service-main
    restart: unless-stopped
    ports:
      - "8201:8000"
    environment:
      - VAULT_URL=http://bizosaas-vault:8200
      - VAULT_TOKEN=myroot
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/bizoholic
    depends_on:
      - bizosaas-vault
      - bizosaas-postgres
    networks:
      - bizosaas-network
    labels:
      - "bizosaas.service.category=core"
      - "bizosaas.service.name=vault-service"

  # === E-COMMERCE SERVICES ===
  bizosaas-saleor:
    image: ghcr.io/saleor/saleor:latest
    container_name: bizosaas-saleor-main
    restart: unless-stopped
    ports:
      - "8020:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/saleor
      - REDIS_URL=redis://bizosaas-redis:6379/2
      - SECRET_KEY=saleor-secret-key-for-bizosaas-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,saleor.coreldove.com
      - DEFAULT_FROM_EMAIL=noreply@coreldove.com
      - DEBUG=False
      - ENABLE_SSL=False
      - CREATE_IMAGES_ON_DEMAND=True
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saleor.rule=Host(`localhost`) && PathPrefix(`/graphql`, `/media`)"
      - "traefik.http.services.saleor.loadbalancer.server.port=8000"
      - "bizosaas.service.category=ecommerce"
      - "bizosaas.service.name=saleor"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-saleor-dashboard:
    image: ghcr.io/saleor/saleor-dashboard:latest
    container_name: bizosaas-saleor-dashboard-main
    restart: unless-stopped
    ports:
      - "9020:80"
    environment:
      - API_URI=http://localhost:8020/graphql/
    depends_on:
      - bizosaas-saleor
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saleor-dashboard.rule=Host(`localhost`) && PathPrefix(`/saleor-dashboard`)"
      - "traefik.http.services.saleor-dashboard.loadbalancer.server.port=80"
      - "bizosaas.service.category=ecommerce"
      - "bizosaas.service.name=saleor-dashboard"

  bizosaas-business-directory:
    build:
      context: ./services/business-directory
      dockerfile: Dockerfile
    image: bizosaas/business-directory:latest
    container_name: bizosaas-business-directory-main
    restart: unless-stopped
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/bizoholic
      - REDIS_URL=redis://bizosaas-redis:6379/4
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "bizosaas.service.category=business"
      - "bizosaas.service.name=directory"

  # === FRONTEND SERVICES ===
  bizosaas-website:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: bizosaas/website:latest
    container_name: bizosaas-website-main
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_CRM_URL=http://localhost:8007
      - NEXT_PUBLIC_DIRECTORY_URL=http://localhost:8003
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`localhost`)"
      - "traefik.http.services.website.loadbalancer.server.port=3000"
      - "bizosaas.service.category=frontend"
      - "bizosaas.service.name=website"

  bizosaas-coreldove-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: bizosaas/coreldove-frontend:latest
    container_name: bizosaas-coreldove-frontend-main
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_PLATFORM_MODE=coreldove
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_SALEOR_API_URL=http://localhost:8020
      - NEXT_PUBLIC_CMS_URL=http://localhost:8010
      - NEXT_PUBLIC_SITE_NAME=CoreLDove
      - NEXT_PUBLIC_SITE_DESCRIPTION=AI-Powered E-commerce Platform
    depends_on:
      - bizosaas-saleor
      - bizosaas-wagtail-cms
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.coreldove-frontend.rule=Host(`localhost`) && PathPrefix(`/coreldove-standalone`)"
      - "traefik.http.services.coreldove-frontend.loadbalancer.server.port=3000"
      - "bizosaas.service.category=frontend"
      - "bizosaas.service.name=coreldove-frontend"

  bizosaas-client-sites:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: bizosaas/client-sites:latest
    container_name: bizosaas-client-sites-main
    restart: unless-stopped
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_PLATFORM_MODE=multi_tenant
      - NEXT_PUBLIC_AI_AGENTS_URL=http://localhost:8000
      - NEXT_PUBLIC_CRM_API_URL=http://localhost:8007
      - NEXT_PUBLIC_CLIENT_SITES_API_URL=http://localhost:8005
      - NEXT_PUBLIC_WAGTAIL_CMS_URL=http://localhost:8010
    depends_on:
      - bizosaas-client-sites-api
      - bizosaas-wagtail-cms
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-sites.rule=Host(`localhost`) && PathPrefix(`/client-sites`)"
      - "traefik.http.services.client-sites.loadbalancer.server.port=3000"
      - "bizosaas.service.category=frontend"
      - "bizosaas.service.name=client-sites"

  bizosaas-client-sites-api:
    build:
      context: ./services/client-sites
      dockerfile: Dockerfile
    image: bizosaas/client-sites-api:latest
    container_name: bizosaas-client-sites-api-main
    restart: unless-stopped
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/bizoholic
      - REDIS_URL=redis://bizosaas-redis:6379/5
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "bizosaas.service.category=api"
      - "bizosaas.service.name=client-sites-api"

  bizosaas-wagtail-cms:
    build:
      context: ./services/wagtail-cms
      dockerfile: Dockerfile
    image: bizosaas/wagtail-cms:latest
    container_name: bizosaas-wagtail-cms-main
    restart: unless-stopped
    ports:
      - "8010:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizoholicSecure2025@bizosaas-postgres:5432/wagtail
      - REDIS_URL=redis://bizosaas-redis:6379/3
      - DEBUG=False
      - SECRET_KEY=wagtail-secret-key-for-bizosaas-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,cms.bizoholic.com
      - WAGTAIL_SITE_NAME=Bizoholic CMS
      - DJANGO_SETTINGS_MODULE=wagtail_project.settings.production
    depends_on:
      bizosaas-postgres:
        condition: service_healthy
      bizosaas-redis:
        condition: service_healthy
    networks:
      - bizosaas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wagtail-cms.rule=Host(`localhost`) && PathPrefix(`/cms`)"
      - "traefik.http.services.wagtail-cms.loadbalancer.server.port=8000"
      - "bizosaas.service.category=cms"
      - "bizosaas.service.name=wagtail-cms"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # === REVERSE PROXY ===
  bizosaas-traefik:
    image: traefik:3.0
    container_name: bizosaas-traefik-main
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - bizosaas-network
    labels:
      - "bizosaas.service.category=infrastructure"
      - "bizosaas.service.name=traefik"

volumes:
  bizosaas_postgres_data:
    name: bizosaas_postgres_data
  bizosaas_redis_data:
    name: bizosaas_redis_data
  bizosaas_vault_data:
    name: bizosaas_vault_data

networks:
  bizosaas-network:
    name: bizosaas-network
    driver: bridge