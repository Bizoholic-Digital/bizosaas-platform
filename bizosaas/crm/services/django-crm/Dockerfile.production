# Django CRM - Production Container with Multi-Tenant Security
# Multi-stage build for production deployment

FROM python:3.11-slim AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    libpq-dev \
    gettext \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN useradd --create-home --shell /bin/bash --uid 1001 django

FROM base AS builder

WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

FROM base AS runtime

WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /root/.local /home/django/.local

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/media /app/static /app/logs

# Set proper ownership
RUN chown -R django:django /app

# Switch to non-root user
USER django

# Add local pip packages to PATH
ENV PATH=/home/django/.local/bin:$PATH

# Django settings
ENV DJANGO_SETTINGS_MODULE=crm_project.settings.production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Collect static files
RUN python manage.py collectstatic --noinput --verbosity 0 || true

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Use gunicorn for production
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120", "--max-requests", "1000", "--max-requests-jitter", "100", "crm_project.wsgi:application"]