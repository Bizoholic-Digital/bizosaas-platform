version: '3.8'

services:
  # Business Directory Service with AI
  business-directory-ai:
    build: 
      context: .
      dockerfile: Dockerfile.ai
    container_name: bizosaas-directory-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # AI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - AI_ENABLED=${AI_ENABLED:-true}
      
      # Database Configuration
      - POSTGRES_URL=${POSTGRES_URL:-postgresql://postgres:password@postgres:5432/bizosaas}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      
      # Service Configuration
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      
      # CORS Configuration
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
      
    volumes:
      # Mount for development (comment out for production)
      - .:/app
      # Logs
      - ./logs:/app/logs
      
    depends_on:
      - postgres
      - redis
      
    networks:
      - bizosaas-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bizosaas-directory-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=bizosaas
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bizosaas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bizosaas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bizosaas-directory-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bizosaas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bizosaas-directory-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@bizosaas.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - bizosaas-network
    depends_on:
      - postgres
    profiles:
      - admin

  # Optional: Redis Commander for cache management  
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: bizosaas-directory-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - bizosaas-network
    depends_on:
      - redis
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  bizosaas-network:
    driver: bridge
    name: bizosaas-directory-network

# Health check and monitoring
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"