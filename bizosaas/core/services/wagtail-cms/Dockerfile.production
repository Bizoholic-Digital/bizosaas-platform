# Wagtail CMS - Production Container with Security Optimizations
# Multi-stage build for minimal attack surface

FROM python:3.11-slim AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    gettext \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN useradd --create-home --shell /bin/bash --uid 1001 wagtail

FROM base AS builder

WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

FROM base AS runtime

WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /root/.local /home/wagtail/.local

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/static /app/media /var/log/wagtail

# Set proper ownership
RUN chown -R wagtail:wagtail /app /var/log/wagtail

# Switch to non-root user
USER wagtail

# Add local pip packages to PATH
ENV PATH=/home/wagtail/.local/bin:$PATH

# Wagtail settings
ENV PYTHONPATH=/app
ENV DJANGO_SETTINGS_MODULE=wagtail_cms.settings.production
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Collect static files
RUN python manage.py collectstatic --noinput --verbosity 0 || true

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/admin/ || exit 1

# Production command with Wagtail-optimized settings
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--worker-class", "gthread", "--threads", "2", "--timeout", "120", "wagtail_cms.wsgi:application"]