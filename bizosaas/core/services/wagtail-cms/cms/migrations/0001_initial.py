# Generated by Django 4.2.24 on 2025-09-08 05:31

from django.db import migrations, models
import django.db.models.deletion
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0027_image_description'),
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('subdomain', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bizosaas_tenant_id', models.CharField(max_length=50, unique=True)),
                ('api_settings', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
            },
        ),
        migrations.CreateModel(
            name='LandingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('variant_name', models.CharField(blank=True, default='A', max_length=50)),
                ('is_control', models.BooleanField(default=True)),
                ('campaign_id', models.CharField(blank=True, max_length=100)),
                ('conversion_goals', models.JSONField(blank=True, default=list)),
                ('content_blocks', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2), ('cta', 7), ('features', 10), ('testimonials', 14), ('stats', 17), ('pricing', 23), ('html', 24)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 3: ('wagtail.blocks.TextBlock', (), {'required': False}), 4: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 5: ('wagtail.blocks.URLBlock', (), {}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')]}), 7: ('wagtail.blocks.StructBlock', [[('title', 0), ('description', 3), ('button_text', 4), ('button_url', 5), ('button_style', 6)]], {}), 8: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 9: ('wagtail.blocks.StructBlock', [[('icon', 8), ('title', 0), ('description', 1)]], {}), 10: ('wagtail.blocks.ListBlock', (9,), {}), 11: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 12: ('wagtail.blocks.IntegerBlock', (), {'default': 5, 'max_value': 5, 'min_value': 1}), 13: ('wagtail.blocks.StructBlock', [[('quote', 1), ('author_name', 0), ('author_title', 11), ('author_company', 11), ('author_image', 8), ('rating', 12)]], {}), 14: ('wagtail.blocks.ListBlock', (13,), {}), 15: ('wagtail.blocks.CharBlock', (), {'max_length': 20}), 16: ('wagtail.blocks.StructBlock', [[('stat_number', 15), ('stat_label', 4), ('stat_description', 3)]], {}), 17: ('wagtail.blocks.ListBlock', (16,), {}), 18: ('wagtail.blocks.CharBlock', (), {'default': 'month', 'max_length': 20}), 19: ('wagtail.blocks.ListBlock', (0,), {}), 20: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'default': 'Get Started', 'max_length': 50}), 22: ('wagtail.blocks.StructBlock', [[('plan_name', 0), ('price', 15), ('price_period', 18), ('features', 19), ('is_popular', 20), ('cta_text', 21), ('cta_url', 5)]], {}), 23: ('wagtail.blocks.ListBlock', (22,), {}), 24: ('wagtail.blocks.RawHTMLBlock', (), {})})),
                ('meta_description', models.TextField(blank=True, max_length=300)),
                ('tracking_codes', models.JSONField(blank=True, default=dict)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='landing_pages', to='cms.tenant')),
            ],
            options={
                'verbose_name': 'Landing Page',
                'verbose_name_plural': 'Landing Pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('author', models.CharField(blank=True, max_length=100)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('excerpt', models.TextField(blank=True, max_length=300)),
                ('body', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2), ('quote', 3), ('code', 1), ('cta', 8)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.TextBlock', (), {}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 3: ('wagtail.blocks.BlockQuoteBlock', (), {}), 4: ('wagtail.blocks.TextBlock', (), {'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 6: ('wagtail.blocks.URLBlock', (), {}), 7: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')]}), 8: ('wagtail.blocks.StructBlock', [[('title', 0), ('description', 4), ('button_text', 5), ('button_url', 6), ('button_style', 7)]], {})})),
                ('keywords', models.CharField(blank=True, max_length=300)),
                ('reading_time', models.IntegerField(default=5)),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('social_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_pages', to='cms.tenant')),
            ],
            options={
                'verbose_name': 'Content Page',
                'verbose_name_plural': 'Content Pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CampaignPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('campaign_type', models.CharField(choices=[('email', 'Email Campaign'), ('social', 'Social Media'), ('ppc', 'Pay-Per-Click'), ('content', 'Content Marketing'), ('seo', 'SEO Campaign')], max_length=50)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('target_audience', models.JSONField(blank=True, default=dict)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('campaign_description', wagtail.fields.RichTextField(blank=True)),
                ('assets', wagtail.fields.StreamField([('image', 0), ('video_embed', 1), ('copy_text', 2), ('cta', 7)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 1: ('wagtail.blocks.URLBlock', (), {}), 2: ('wagtail.blocks.TextBlock', (), {}), 3: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 4: ('wagtail.blocks.TextBlock', (), {'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 6: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')]}), 7: ('wagtail.blocks.StructBlock', [[('title', 3), ('description', 4), ('button_text', 5), ('button_url', 1), ('button_style', 6)]], {})})),
                ('impressions', models.IntegerField(default=0)),
                ('clicks', models.IntegerField(default=0)),
                ('conversions', models.IntegerField(default=0)),
                ('spend', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_pages', to='cms.tenant')),
            ],
            options={
                'verbose_name': 'Campaign Page',
                'verbose_name_plural': 'Campaign Pages',
            },
            bases=('wagtailcore.page',),
        ),
    ]
