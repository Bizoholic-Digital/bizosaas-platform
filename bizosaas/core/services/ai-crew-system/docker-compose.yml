version: '3.8'

services:
  ai-crew-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bizosaas-ai-crew-system
    ports:
      - "8002:8002"
    environment:
      # Application settings
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      
      # Database connection (shared with other services)
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/bizosaas
      - REDIS_URL=redis://redis:6379/0
      
      # AI Service API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      
      # BizOSaaS Brain Integration
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - CREW_SYSTEM_SECRET=${CREW_SYSTEM_SECRET:-crew-secret-key}
      
      # Performance Monitoring
      - MONITORING_ENABLED=true
      - METRICS_RETENTION_DAYS=7
      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL}
      
      # Crew Configuration
      - DEFAULT_CREW_TIMEOUT=300
      - MAX_CONCURRENT_WORKFLOWS=10
      - ENABLE_CREW_CACHING=true
      
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    
    networks:
      - bizosaas-network
    
    depends_on:
      - postgres
      - redis
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/crew/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Shared services (if not already running)
  postgres:
    image: pgvector/pgvector:pg16
    container_name: bizosaas-postgres
    environment:
      - POSTGRES_DB=bizosaas
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - bizosaas-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: bizosaas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bizosaas-network
    restart: unless-stopped

  # Optional: Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: bizosaas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - bizosaas-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: bizosaas-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - bizosaas-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  bizosaas-network:
    driver: bridge
    name: bizosaas-network