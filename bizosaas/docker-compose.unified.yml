# BizOSaaS Platform - Unified Production Ready Stack
# Consolidates all services with correct port allocation and TailAdmin v2 integration

services:
  # ===========================================
  # INFRASTRUCTURE SERVICES
  # ===========================================
  postgres:
    image: ankane/pgvector:v0.5.1
    container_name: bizosaas-postgres-unified
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Bizoholic2024Alagiri
      POSTGRES_DB: bizosaas
      POSTGRES_MULTIPLE_DATABASES: wagtail,saleor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./infrastructure/database/create-multiple-dbs.sh:/docker-entrypoint-initdb.d/02-create-multiple-dbs.sh
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bizosaas"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: bizosaas-redis-unified
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  vault:
    image: hashicorp/vault:latest
    container_name: bizosaas-vault-unified
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: bizosaas-root-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - bizosaas-platform-network
    restart: unless-stopped

  # ===========================================
  # BACKEND SERVICES
  # ===========================================
  
  # FastAPI Brain - Enhanced AI Agentic Hub (Port 8001)
  bizosaas-brain:
    build:
      context: ./ai/services/bizosaas-brain
      dockerfile: Dockerfile
    container_name: bizosaas-brain-unified
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/0
      VAULT_URL: http://vault:8200
      VAULT_TOKEN: bizosaas-root-token
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy-key}
      JWT_SECRET: ${JWT_SECRET:-bizosaas-central-secret-key}
      SECRET_KEY: bizosaas-brain-secret-key-production
      ENVIRONMENT: production
      ENABLE_METRICS: "1"
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@bizosaas.com}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      vault:
        condition: service_started
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    volumes:
      - ./ai/services/bizosaas-brain:/app
      - /app/__pycache__
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Auth Service v2 (Port 8007)
  auth-service:
    build:
      context: ./core/services/auth-service-v2
      dockerfile: Dockerfile
    container_name: bizosaas-auth-unified
    ports:
      - "8007:8007"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/1
      JWT_SECRET: ${JWT_SECRET:-bizosaas-central-secret-key}
      SECRET_KEY: auth-service-secret-key-production
      ENVIRONMENT: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Wagtail CMS (Port 8006)
  wagtail-cms:
    build:
      context: ./core/services/wagtail-cms
      dockerfile: Dockerfile
    container_name: bizosaas-wagtail-unified
    ports:
      - "8006:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/wagtail
      REDIS_URL: redis://redis:6379/2
      SECRET_KEY: wagtail-secret-key-production
      DEBUG: "0"
      ALLOWED_HOSTS: localhost,127.0.0.1,wagtail-cms,bizosaas.local
      DJANGO_LOG_LEVEL: INFO
      LOGGING_USE_CONSOLE: "1"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

  # Saleor E-commerce Backend (Port 8000)
  saleor-backend:
    image: ghcr.io/saleor/saleor:3.20
    container_name: bizosaas-saleor-unified
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/saleor
      REDIS_URL: redis://redis:6379/3
      SECRET_KEY: saleor-secret-key-production
      DEBUG: "1"
      ALLOWED_HOSTS: localhost,127.0.0.1,saleor-backend,bizosaas.local
      ALLOWED_CLIENT_HOSTS: http://localhost:3000,http://localhost:3002,http://localhost:3007,http://127.0.0.1:3000,http://127.0.0.1:3002,http://127.0.0.1:3007
      DEFAULT_FROM_EMAIL: noreply@bizosaas.com
      ENABLE_ACCOUNT_CONFIRMATION_BY_EMAIL: "false"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # FRONTEND APPLICATIONS
  # ===========================================

  # BizOSaaS Admin Dashboard (Port 3000)
  bizosaas-admin:
    build:
      context: ./frontend/apps/bizosaas-admin
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-admin-unified
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_AUTH_API_URL: http://localhost:8007
      NEXT_PUBLIC_WAGTAIL_URL: http://localhost:8006
      NEXT_PUBLIC_SALEOR_URL: http://localhost:8000
      NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:8001/ws/realtime
      NEXT_PUBLIC_PLATFORM: bizosaas-admin
      PORT: 3000
    depends_on:
      bizosaas-brain:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Bizoholic Marketing Frontend (Port 3001)
  bizoholic-frontend:
    build:
      context: ./frontend/apps/bizoholic-frontend
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-bizoholic-unified
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_AUTH_API_URL: http://localhost:8007
      NEXT_PUBLIC_WAGTAIL_URL: http://localhost:8006
      NEXT_PUBLIC_PLATFORM: bizoholic-marketing
      PORT: 3001
    depends_on:
      bizosaas-brain:
        condition: service_healthy
      wagtail-cms:
        condition: service_started
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CoreLDove E-commerce Frontend (Port 3002)
  coreldove-frontend:
    build:
      context: ./frontend/apps/coreldove-frontend
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-coreldove-unified
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_AUTH_API_URL: http://localhost:8007
      NEXT_PUBLIC_SALEOR_URL: http://localhost:8000
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-}
      NEXT_PUBLIC_PLATFORM: coreldove-ecommerce
      PORT: 3002
    depends_on:
      bizosaas-brain:
        condition: service_healthy
      saleor-backend:
        condition: service_started
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Business Directory Frontend (Port 3004)
  business-directory:
    build:
      context: ./frontend/apps/business-directory
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-business-directory-unified
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_PLATFORM: business-directory
      PORT: 3004
    depends_on:
      bizosaas-brain:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client Portal (Port 3006)
  client-portal:
    build:
      context: ./frontend/apps/client-portal
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-client-portal-unified
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_AUTH_API_URL: http://localhost:8007
      NEXT_PUBLIC_PLATFORM: client-portal
      PORT: 3006
    depends_on:
      bizosaas-brain:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # BACKEND WORKFLOW & CRM SERVICES 
  # ===========================================

  # Django CRM Service (Port 8008)
  django-crm:
    build:
      context: ./crm/services/django-crm
      dockerfile: Dockerfile
    container_name: bizosaas-django-crm-unified
    ports:
      - "8008:8000"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/4
      SECRET_KEY: django-crm-secret-key-production
      DEBUG: "0"
      ALLOWED_HOSTS: localhost,127.0.0.1,django-crm,bizosaas.local
      DJANGO_LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Temporal Workflow Orchestration (Port 8009)
  temporal-orchestration:
    build:
      context: ./integration/services/temporal-orchestration
      dockerfile: Dockerfile
    container_name: bizosaas-temporal-unified
    ports:
      - "8009:8009"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/5
      TEMPORAL_HOST: localhost
      TEMPORAL_PORT: 7233
      SECRET_KEY: temporal-secret-key-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # AI SERVICES
  # ===========================================

  # Marketing Strategist AI (Port 8010)
  marketing-strategist-ai:
    build:
      context: ./services/marketing-strategist-ai
      dockerfile: Dockerfile
    container_name: bizosaas-marketing-ai-unified
    ports:
      - "8010:8010"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/6
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy-key}
      SECRET_KEY: marketing-ai-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped

  # Commerce Advisor AI (Port 8011)
  commerce-advisor-ai:
    build:
      context: ./services/commerce-advisor-ai
      dockerfile: Dockerfile
    container_name: bizosaas-commerce-ai-unified
    ports:
      - "8011:8011"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      REDIS_URL: redis://redis:6379/7
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy-key}
      SECRET_KEY: commerce-ai-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped

  # ===========================================
  # ANALYTICS & MONITORING SERVICES
  # ===========================================

  # Analytics Dashboard Service (Port 3010)
  analytics-dashboard:
    build:
      context: ./frontend/apps/analytics-dashboard
      dockerfile: Dockerfile
      target: runner
    container_name: bizosaas-analytics-dashboard-unified
    ports:
      - "3010:3010"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8001
      NEXT_PUBLIC_AUTH_API_URL: http://localhost:8007
      NEXT_PUBLIC_PLATFORM: analytics-dashboard
      PORT: 3010
    depends_on:
      bizosaas-brain:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # ADMIN & UTILITY SERVICES
  # ===========================================

  # SQLAdmin Dashboard (Port 8005)
  sqladmin-dashboard:
    build:
      context: ./admin/services/sqladmin-dashboard
      dockerfile: Dockerfile
    container_name: bizosaas-sqladmin-unified
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://postgres:Bizoholic2024Alagiri@postgres:5432/bizosaas
      SECRET_KEY: sqladmin-secret-key-production
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bizosaas-platform-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===========================================
# NETWORKS & VOLUMES
# ===========================================
networks:
  bizosaas-platform-network:
    driver: bridge
    name: bizosaas-platform-network

volumes:
  postgres_data:
    name: bizosaas-postgres-data
  redis_data:
    name: bizosaas-redis-data