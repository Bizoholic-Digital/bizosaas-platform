version: '3.8'

# BizOSaaS Platform Stack - Core Platform Services
# Dokploy Project: bizosaas-platform
# Services: Admin Dashboard, Brain Gateway, Auth Service

services:
  # ===========================================
  # BIZOSAAS FRONTEND APPLICATIONS
  # ===========================================
  
  # CLIENT PORTAL - PORT 3006
  bizosaas-client-portal:
    build:
      context: ./frontend/apps/client-portal
      dockerfile: Dockerfile
    image: bizosaas/client-portal:latest
    container_name: bizosaas-client-portal-3006
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - NEXT_PUBLIC_BRAIN_API_URL=http://bizosaas-brain:8001
      - NEXT_PUBLIC_AUTH_API_URL=http://bizosaas-auth-v2:8007
      - NEXT_PUBLIC_WAGTAIL_URL=http://bizosaas-wagtail-cms:8000
      - NEXT_PUBLIC_PLATFORM=client-portal
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-brain
      - bizosaas-auth-v2
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3006/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-portal.rule=Host(`portal.bizosaas.local`)"
      - "traefik.http.services.client-portal.loadbalancer.server.port=3006"

  # CORELDOVE E-COMMERCE FRONTEND - PORT 3012
  bizosaas-coreldove-frontend:
    build:
      context: ./frontend/apps/coreldove-frontend
      dockerfile: Dockerfile
    image: bizosaas-coreldove-frontend:latest
    container_name: bizosaas-coreldove-frontend-3012
    ports:
      - "3012:3012"
    environment:
      - NODE_ENV=production
      - PORT=3012
      - NEXT_PUBLIC_BRAIN_API_URL=http://bizosaas-brain:8001
      - NEXT_PUBLIC_SALEOR_API_URL=http://bizosaas-saleor-api:8000
      - NEXT_PUBLIC_PLATFORM=coreldove-ecommerce
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-brain
      - bizosaas-saleor-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3012/"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.coreldove-frontend.rule=Host(`coreldove.bizosaas.local`) || Host(`coreldove.localhost`) || Host(`coreldove.com`)"
      - "traefik.http.services.coreldove-frontend.loadbalancer.server.port=3012"

  # BIZOHOLIC MARKETING FRONTEND - PORT 3008
  bizosaas-bizoholic-frontend:
    build:
      context: ./frontend/apps/bizoholic-frontend
      dockerfile: Dockerfile
    image: bizosaas/bizoholic-frontend:latest
    container_name: bizosaas-bizoholic-frontend-3008
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=production
      - PORT=3008
      - NEXT_PUBLIC_BRAIN_API_URL=http://bizosaas-brain:8001
      - NEXT_PUBLIC_WAGTAIL_URL=http://bizosaas-wagtail-cms:8000
      - NEXT_PUBLIC_PLATFORM=bizoholic-marketing
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-brain
      - bizosaas-wagtail-cms
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3008/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bizoholic-frontend.rule=Host(`bizoholic.bizosaas.local`)"
      - "traefik.http.services.bizoholic-frontend.loadbalancer.server.port=3008"

  # BIZOSAAS ADMIN DASHBOARD - PORT 3009
  bizosaas-admin-dashboard:
    build:
      context: ./frontend/apps/bizosaas-admin
      dockerfile: Dockerfile
    image: bizosaas/admin-dashboard:latest
    container_name: bizosaas-admin-dashboard-3009
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=production
      - PORT=3009
      - NEXT_PUBLIC_BRAIN_API_URL=http://bizosaas-brain:8001
      - NEXT_PUBLIC_AUTH_API_URL=http://bizosaas-auth-v2:8007
      - NEXT_PUBLIC_SUPERSET_URL=http://bizosaas-superset:8088
      - NEXT_PUBLIC_PLATFORM=bizosaas-admin
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-brain
      - bizosaas-auth-v2
      - bizosaas-superset
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3009/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bizosaas-admin.rule=Host(`admin.bizosaas.local`) || Host(`localhost`)"
      - "traefik.http.services.bizosaas-admin.loadbalancer.server.port=3009"

  # ===========================================
  # BIZOSAAS BRAIN API GATEWAY - PORT 8001
  # ===========================================
  
  bizosaas-brain:
    build:
      context: ./ai/services/bizosaas-brain-simple
      dockerfile: Dockerfile
    image: bizosaas/brain-gateway:latest
    container_name: bizosaas-brain-8001
    ports:
      - "8001:8001"
    environment:
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/0
      # API Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
      # Service URLs
      - DJANGO_CRM_URL=http://bizosaas-django-crm:8008
      - WAGTAIL_URL=http://bizosaas-wagtail-cms:8000
      - SUPERSET_URL=http://bizosaas-superset:8088
      - VAULT_URL=http://bizosaas-vault:8200
      - SALEOR_URL=http://bizosaas-saleor-api:8000
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bizosaas-brain.rule=Host(`api.bizosaas.local`)"

  # ===========================================
  # AUTH SERVICE V2 - PORT 8007
  # ===========================================
  
  bizosaas-auth-v2:
    build:
      context: ./core/services/auth-service-v2
      dockerfile: Dockerfile
    image: bizosaas/auth-service-v2:latest
    container_name: bizosaas-auth-v2-8007
    ports:
      - "8007:8007"
    environment:
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/1
      # Security configuration
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - SECRET_KEY=auth-service-secret-key-production
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # DJANGO CRM SERVICE - PORT 8008
  # ===========================================
  
  bizosaas-django-crm:
    build:
      context: ./crm/services/django-crm
      dockerfile: Dockerfile
    image: bizosaas/django-crm:latest
    container_name: bizosaas-django-crm-8008
    ports:
      - "8008:8008"
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=crm_project.settings.production
      - SECRET_KEY=${DJANGO_SECRET_KEY:-django-crm-secret-key-production}
      - DEBUG=False
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - DB_NAME=bizosaas
      - DB_USER=admin
      - DB_PASSWORD=securepassword
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      # Redis connections
      - REDIS_URL=redis://host.docker.internal:6379/2
      - CELERY_BROKER_URL=redis://host.docker.internal:6379/3
      - CELERY_RESULT_BACKEND=redis://host.docker.internal:6379/4
      # Service integrations
      - AI_AGENTS_URL=http://bizosaas-brain:8001
      - TEMPORAL_URL=http://host.docker.internal:8202
      - VAULT_URL=http://host.docker.internal:8200
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - BRAIN_API_URL=http://bizosaas-brain:8001
      # Security and networking
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,bizosaas-django-crm,host.docker.internal
      - CORS_ALLOW_ALL_ORIGINS=True
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    volumes:
      - django_crm_logs:/app/logs
      - django_crm_media:/app/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django-crm.rule=Host(`crm.bizosaas.local`)"
      - "traefik.http.services.django-crm.loadbalancer.server.port=8008"

  # ===========================================
  # DJANGO CRM CELERY WORKER
  # ===========================================
  
  bizosaas-crm-celery-worker:
    build:
      context: ./crm/services/django-crm
      dockerfile: Dockerfile
    image: bizosaas/django-crm:latest
    container_name: bizosaas-crm-celery-worker
    command: celery -A crm_project worker -l info --concurrency=2
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=crm_project.settings.production
      - SECRET_KEY=${DJANGO_SECRET_KEY:-django-crm-secret-key-production}
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - DB_NAME=bizosaas
      - DB_USER=admin
      - DB_PASSWORD=securepassword
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      # Redis connections
      - CELERY_BROKER_URL=redis://host.docker.internal:6379/3
      - CELERY_RESULT_BACKEND=redis://host.docker.internal:6379/4
      # Service integrations
      - AI_AGENTS_URL=http://bizosaas-brain:8001
      - TEMPORAL_URL=http://host.docker.internal:8202
      - VAULT_URL=http://host.docker.internal:8200
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    volumes:
      - django_crm_logs:/app/logs
    depends_on:
      - bizosaas-django-crm

  # ===========================================
  # DJANGO CRM CELERY BEAT SCHEDULER
  # ===========================================
  
  bizosaas-crm-celery-beat:
    build:
      context: ./crm/services/django-crm
      dockerfile: Dockerfile
    image: bizosaas/django-crm:latest
    container_name: bizosaas-crm-celery-beat
    command: celery -A crm_project beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=crm_project.settings.production
      - SECRET_KEY=${DJANGO_SECRET_KEY:-django-crm-secret-key-production}
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - DB_NAME=bizosaas
      - DB_USER=admin
      - DB_PASSWORD=securepassword
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      # Redis connections
      - CELERY_BROKER_URL=redis://host.docker.internal:6379/3
      - CELERY_RESULT_BACKEND=redis://host.docker.internal:6379/4
      # Service integrations
      - AI_AGENTS_URL=http://bizosaas-brain:8001
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    volumes:
      - django_crm_logs:/app/logs
    depends_on:
      - bizosaas-django-crm

  # ===========================================
  # APACHE SUPERSET ANALYTICS - PORT 8088
  # ===========================================
  
  bizosaas-superset-db:
    image: postgres:15-alpine
    container_name: bizosaas-superset-db
    environment:
      - POSTGRES_DB=superset
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=${SUPERSET_DB_PASSWORD:-superset_secure_password}
    volumes:
      - superset_db_data:/var/lib/postgresql/data
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-superset-redis:
    image: redis:7-alpine
    container_name: bizosaas-superset-redis
    command: redis-server --requirepass ${SUPERSET_REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - superset_redis_data:/data
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-superset:
    image: apache/superset:latest
    container_name: bizosaas-superset-8088
    ports:
      - "8088:8088"
    environment:
      # Database Configuration
      - SUPERSET_CONFIG_PATH=/app/pythonpath/superset_config.py
      - DATABASE_DIALECT=postgresql
      - DATABASE_USER=superset
      - DATABASE_PASSWORD=${SUPERSET_DB_PASSWORD:-superset_secure_password}
      - DATABASE_HOST=bizosaas-superset-db
      - DATABASE_PORT=5432
      - DATABASE_DB=superset
      # Redis Configuration
      - REDIS_HOST=bizosaas-superset-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${SUPERSET_REDIS_PASSWORD:-redis_secure_password}
      # Security
      - SECRET_KEY=${SUPERSET_SECRET_KEY:-superset-secret-key-production}
      - SUPERSET_LOAD_EXAMPLES=no
      # Multi-tenant Configuration
      - FEATURE_FLAGS={"ENABLE_TEMPLATE_PROCESSING":true,"ROW_LEVEL_SECURITY":true,"DASHBOARD_FILTERS_EXPERIMENTAL":true,"DASHBOARD_NATIVE_FILTERS":true,"GLOBAL_ASYNC_QUERIES":true,"VERSIONED_EXPORT":true}
      # Brain API Integration
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - BRAIN_API_TOKEN=${BRAIN_API_TOKEN:-brain_api_secure_token}
      # Main database connection for analytics
      - MAIN_DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      # Tenant Configuration
      - DEFAULT_TENANT_ID=${DEFAULT_TENANT_ID:-demo}
      - ENVIRONMENT=production
    volumes:
      - superset_app_data:/app/superset_home
    networks:
      - bizosaas-platform-network
    depends_on:
      bizosaas-superset-db:
        condition: service_healthy
      bizosaas-superset-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.superset.rule=Host(`analytics.bizosaas.local`)"
      - "traefik.http.services.superset.loadbalancer.server.port=8088"
    command: >
      bash -c "
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@bizosaas.com --password ${SUPERSET_ADMIN_PASSWORD:-admin_secure_password} || true &&
        superset db upgrade &&
        superset init &&
        superset run -p 8088 -h 0.0.0.0 --with-threads --reload
      "

  # ===========================================
  # WAGTAIL CMS SERVICE - PORT 8006
  # ===========================================
  
  bizosaas-wagtail-cms:
    build:
      context: ./core/services/wagtail-cms
      dockerfile: Dockerfile
    image: bizosaas/wagtail-cms:latest
    container_name: bizosaas-wagtail-cms-8006
    ports:
      - "8006:8000"
    environment:
      # Django configuration
      - DJANGO_SETTINGS_MODULE=wagtail_cms.settings.production
      - SECRET_KEY=${WAGTAIL_SECRET_KEY:-wagtail-secret-key-production}
      - DEBUG=False
      # Database connections
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - DB_NAME=bizosaas
      - DB_USER=admin
      - DB_PASSWORD=securepassword
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      # Redis connections
      - REDIS_URL=redis://host.docker.internal:6379/5
      # Service integrations
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      # Security and networking
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,bizosaas-wagtail-cms,host.docker.internal
      - CORS_ALLOW_ALL_ORIGINS=True
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
      - WAGTAIL_SITE_NAME=BizOSaaS CMS
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    volumes:
      - wagtail_media:/app/media
      - wagtail_static:/app/static
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wagtail-cms.rule=Host(`cms.bizosaas.local`)"
      - "traefik.http.services.wagtail-cms.loadbalancer.server.port=8000"

  # ===========================================
  # HASHICORP VAULT - PORT 8200
  # ===========================================
  
  bizosaas-vault:
    image: hashicorp/vault:latest
    container_name: bizosaas-vault-8200
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_ROOT_TOKEN:-vault_root_token_dev}
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDR=http://0.0.0.0:8200
    volumes:
      - vault_data:/vault/data
      - vault_logs:/vault/logs
    networks:
      - bizosaas-platform-network
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.bizosaas.local`)"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"

  # ===========================================
  # DATA SYNCHRONIZATION SERVICE - PORT 8025
  # ===========================================
  
  bizosaas-data-sync:
    build:
      context: ./services/data-sync
      dockerfile: Dockerfile
    image: bizosaas/data-sync:latest
    container_name: bizosaas-data-sync-8025
    ports:
      - "8025:8025"
    environment:
      # Database and Cache
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/6
      # Security
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
      # Platform Service URLs
      - BIZOSAAS_BRAIN_URL=http://bizosaas-brain:8001
      - BIZOHOLIC_FRONTEND_URL=http://bizosaas-bizoholic-frontend:3008
      - CORELDOVE_FRONTEND_URL=http://bizosaas-coreldove-frontend:3012
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - DJANGO_CRM_URL=http://bizosaas-django-crm:8008
      - SALEOR_API_URL=http://bizosaas-saleor-api:8024
      - WAGTAIL_CMS_URL=http://bizosaas-wagtail-cms:8006
      # Sync Configuration
      - SYNC_BATCH_SIZE=${SYNC_BATCH_SIZE:-100}
      - SYNC_INTERVAL_SECONDS=${SYNC_INTERVAL_SECONDS:-5}
      - MAX_CONCURRENT_SYNCS=${MAX_CONCURRENT_SYNCS:-10}
      - EVENT_RETENTION_DAYS=${EVENT_RETENTION_DAYS:-30}
    restart: unless-stopped
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-brain
      - bizosaas-auth-v2
      - bizosaas-django-crm
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.data-sync.rule=Host(`sync.bizosaas.local`)"
      - "traefik.http.services.data-sync.loadbalancer.server.port=8025"

  # ===========================================
  # SALEOR E-COMMERCE SERVICE - PORT 8024
  # ===========================================

  bizosaas-saleor-db:
    image: postgres:15-alpine
    container_name: bizosaas-saleor-db
    environment:
      - POSTGRES_DB=saleor
      - POSTGRES_USER=saleor
      - POSTGRES_PASSWORD=${SALEOR_DB_PASSWORD:-saleor_secure_password}
    volumes:
      - saleor_db_data:/var/lib/postgresql/data
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saleor"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-saleor-redis:
    image: redis:7-alpine
    container_name: bizosaas-saleor-redis
    command: redis-server --requirepass ${SALEOR_REDIS_PASSWORD:-redis_saleor_password}
    volumes:
      - saleor_redis_data:/data
    networks:
      - bizosaas-platform-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  bizosaas-saleor-api:
    build:
      context: ./ecommerce/services/saleor-backend
      dockerfile: Dockerfile
    image: bizosaas/saleor-api:latest
    container_name: bizosaas-saleor-api-8024
    ports:
      - "8024:8000"
    environment:
      # Database Configuration
      - DATABASE_URL=postgres://saleor:${SALEOR_DB_PASSWORD:-saleor_secure_password}@bizosaas-saleor-db:5432/saleor
      - REDIS_URL=redis://:${SALEOR_REDIS_PASSWORD:-redis_saleor_password}@bizosaas-saleor-redis:6379/0
      # Security
      - SECRET_KEY=${SALEOR_SECRET_KEY:-saleor-secret-key-production}
      - DEBUG=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,bizosaas-saleor-api,host.docker.internal
      # Email Configuration
      - DEFAULT_FROM_EMAIL=noreply@bizosaas.com
      - EMAIL_URL=${EMAIL_URL:-smtp://localhost:1025}
      # CORS Configuration
      - CORS_ALLOWED_ORIGINS=http://localhost:3006,http://localhost:3007,http://localhost:3009
      - CORS_ALLOW_ALL_ORIGINS=True
      # Media and Static Files
      - MEDIA_URL=/media/
      - STATIC_URL=/static/
      # Integration with Brain API
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      # Multi-tenant Configuration
      - ENABLE_MULTITENANCY=True
      - DEFAULT_TENANT_ID=${DEFAULT_TENANT_ID:-demo}
      - ENVIRONMENT=production
      # Feature Flags
      - ENABLE_WEBHOOKS=True
      - ENABLE_SUBSCRIPTIONS=True
      - ENABLE_STOREFRONT_SUBSCRIPTIONS=True
    volumes:
      - saleor_media:/app/media
      - saleor_static:/app/static
    networks:
      - bizosaas-platform-network
    depends_on:
      bizosaas-saleor-db:
        condition: service_healthy
      bizosaas-saleor-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saleor-api.rule=Host(`ecommerce.bizosaas.local`)"
      - "traefik.http.services.saleor-api.loadbalancer.server.port=8000"

  bizosaas-saleor-worker:
    build:
      context: ./ecommerce/services/saleor-backend
      dockerfile: Dockerfile
    image: bizosaas/saleor-api:latest
    container_name: bizosaas-saleor-worker
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=info --concurrency=2
    environment:
      # Database Configuration
      - DATABASE_URL=postgres://saleor:${SALEOR_DB_PASSWORD:-saleor_secure_password}@bizosaas-saleor-db:5432/saleor
      - REDIS_URL=redis://:${SALEOR_REDIS_PASSWORD:-redis_saleor_password}@bizosaas-saleor-redis:6379/0
      # Security
      - SECRET_KEY=${SALEOR_SECRET_KEY:-saleor-secret-key-production}
      - DEBUG=False
      # Integration with Brain API
      - BRAIN_API_URL=http://bizosaas-brain:8001
      - AUTH_SERVICE_URL=http://bizosaas-auth-v2:8007
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    volumes:
      - saleor_media:/app/media
    networks:
      - bizosaas-platform-network
    depends_on:
      - bizosaas-saleor-api
    restart: unless-stopped

# ===========================================
# NETWORKS
# ===========================================
networks:
  bizosaas-platform-network:
    driver: bridge
    name: bizosaas-platform-network

# ===========================================
# VOLUMES
# ===========================================
volumes:
  bizosaas_platform_data:
    name: bizosaas-platform-data
  django_crm_logs:
    name: bizosaas-django-crm-logs
  django_crm_media:
    name: bizosaas-django-crm-media
  superset_db_data:
    name: bizosaas-superset-db-data
  superset_redis_data:
    name: bizosaas-superset-redis-data
  superset_app_data:
    name: bizosaas-superset-app-data
  wagtail_media:
    name: bizosaas-wagtail-media
  wagtail_static:
    name: bizosaas-wagtail-static
  vault_data:
    name: bizosaas-vault-data
  vault_logs:
    name: bizosaas-vault-logs
  saleor_db_data:
    name: bizosaas-saleor-db-data
  saleor_redis_data:
    name: bizosaas-saleor-redis-data
  saleor_media:
    name: bizosaas-saleor-media
  saleor_static:
    name: bizosaas-saleor-static