version: '3.8'

networks:
  bizosaas-platform-network:
    external: true
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  elasticsearch-data:
  jaeger-data:

services:
  # ===========================================
  # METRICS COLLECTION & STORAGE
  # ===========================================
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: bizosaas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://localhost:9090'
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # VISUALIZATION & DASHBOARDS
  # ===========================================
  grafana:
    image: grafana/grafana:9.3.0
    container_name: bizosaas-grafana
    ports:
      - "3100:3000"  # Using 3100 to avoid conflicts
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=BizOSaaSAdmin2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # ALERTING & NOTIFICATIONS
  # ===========================================
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: bizosaas-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./alertmanager/templates:/etc/alertmanager/templates:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # SYSTEM METRICS COLLECTORS
  # ===========================================
  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: bizosaas-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netdev.device-exclude=^(veth.*|docker.*|br-.*|lo)$$'
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Container metrics collector
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: bizosaas-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # LOG AGGREGATION & ANALYSIS
  # ===========================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: bizosaas-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - action.destructive_requires_name=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Log processing pipeline
  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.0
    container_name: bizosaas-logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logstash/config:/usr/share/logstash/config:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - bizosaas-platform-network
      - monitoring
    depends_on:
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    container_name: bizosaas-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=a7a6311933d3503b89bc2dbc36572c33a6c10925682e591bffcab6911c06786d
    networks:
      - bizosaas-platform-network
      - monitoring
    depends_on:
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ===========================================
  # DISTRIBUTED TRACING
  # ===========================================
  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: bizosaas-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
      - "6831:6831/udp"  # UDP thrift
      - "6832:6832/udp"  # UDP binary thrift
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
    volumes:
      - jaeger-data:/tmp
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # UPTIME MONITORING
  # ===========================================
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: bizosaas-uptime-kuma
    ports:
      - "3101:3001"
    volumes:
      - ./uptime-kuma:/app/data
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # PERFORMANCE MONITORING
  # ===========================================
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.11.1
    container_name: bizosaas-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:Bizoholic2024Alagiri@bizosaas-postgres-unified:5432/bizosaas?sslmode=disable
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-exporter:
    image: oliver006/redis_exporter:v1.45.0
    container_name: bizosaas-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://bizosaas-redis-unified:6379
    networks:
      - bizosaas-platform-network
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9121/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # MONITORING DASHBOARD AGGREGATOR
  # ===========================================
  monitoring-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: bizosaas-monitoring-dashboard
    ports:
      - "3102:3000"
    environment:
      - NODE_ENV=production
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - JAEGER_URL=http://jaeger:16686
      - KIBANA_URL=http://kibana:5601
      - ALERTMANAGER_URL=http://alertmanager:9093
    networks:
      - bizosaas-platform-network
      - monitoring
    depends_on:
      - prometheus
      - grafana
      - jaeger
      - kibana
      - alertmanager
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3