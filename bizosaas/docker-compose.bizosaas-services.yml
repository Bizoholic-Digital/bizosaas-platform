version: '3.8'

# BizOSaaS Additional Services - AI Agents and Specialized Services
# Dokploy Project: bizosaas-services
# Additional specialized services that extend the core platform

services:
  # ===========================================
  # AI AGENT SERVICES
  # ===========================================

  # AI Agents Service
  bizosaas-ai-agents:
    image: bizosaas/ai-agents:latest
    container_name: bizosaas-ai-agents-8020
    ports:
      - "8020:8000"
    environment:
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/3
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy-key}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
      - BRAIN_API_URL=http://host.docker.internal:8001
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Amazon Sourcing Service
  amazon-sourcing-service:
    image: bizosaas/amazon-sourcing:latest
    container_name: amazon-sourcing-8082
    ports:
      - "8082:8080"
    environment:
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/4
      - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY:-dummy}
      - AMAZON_SECRET_KEY=${AMAZON_SECRET_KEY:-dummy}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Client Sites API
  bizosaas-client-sites-api:
    image: bizosaas/client-sites-api:latest
    container_name: bizosaas-client-sites-8030
    ports:
      - "8030:8000"
    environment:
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/5
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Business Directory Service
  bizosaas-business-directory:
    image: bizosaas/business-directory:latest
    container_name: bizosaas-business-directory-8040
    ports:
      - "8040:8000"
    environment:
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/6
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CRM Service
  bizosaas-crm:
    image: bizosaas/crm:latest
    container_name: bizosaas-crm-8050
    ports:
      - "8050:8000"
    environment:
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
      - REDIS_URL=redis://host.docker.internal:6379/7
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # ANALYTICS AND DASHBOARDS
  # ===========================================

  # Saleor Dashboard
  saleor-dashboard:
    image: ghcr.io/saleor/saleor-dashboard:latest
    container_name: saleor-dashboard-9000
    ports:
      - "9000:80"
    environment:
      - API_URL=http://host.docker.internal:8010/graphql/
      - APP_MOUNT_URI=/dashboard/
      - STATIC_URL=/dashboard/static/
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/dashboard/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Temporal UI (Workflow Management)
  temporal-ui:
    image: temporalio/ui:2.21.3
    container_name: temporal-ui-8234
    ports:
      - "8234:8080"
    environment:
      - TEMPORAL_ADDRESS=host.docker.internal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:8234
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===========================================
  # MONITORING AND UTILITIES
  # ===========================================

  # Vault Service (Extended)
  bizosaas-vault-service:
    image: bizosaas/vault-service:latest
    container_name: bizosaas-vault-service-8201
    ports:
      - "8201:8000"
    environment:
      - VAULT_ADDR=http://host.docker.internal:8200
      - VAULT_TOKEN=dev-only-token
      - DATABASE_URL=postgresql://admin:securepassword@host.docker.internal:5432/bizosaas
    restart: unless-stopped
    networks:
      - bizosaas-services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===========================================
# NETWORKS
# ===========================================
networks:
  bizosaas-services-network:
    driver: bridge
    name: bizosaas-services-network

# ===========================================
# VOLUMES
# ===========================================
volumes:
  bizosaas_services_data:
    name: bizosaas-services-data