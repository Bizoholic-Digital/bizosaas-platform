apiVersion: v1
kind: Namespace
metadata:
  name: bizosaas
  labels:
    name: bizosaas
---
# ConfigMap for shared configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: bizosaas-config
  namespace: bizosaas
data:
  POSTGRES_HOST: "postgres-service"
  POSTGRES_DB: "bizosaas"
  POSTGRES_PORT: "5432"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  NODE_ENV: "production"
  JWT_ALGORITHM: "HS256"
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
---
# Secrets for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: bizosaas-secrets
  namespace: bizosaas
type: Opaque
data:
  POSTGRES_PASSWORD: Yml6b3NhYXNfcGFzc3dvcmQ=  # bizosaas_password (base64)
  JWT_SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQtand0LWtleQ==  # your-super-secret-jwt-key (base64)
  ENCRYPTION_KEY: ZW5jcnlwdGlvbi1rZXktZm9yLWNyZWRlbnRpYWxz  # encryption-key-for-credentials (base64)
---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: bizosaas
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: pgvector/pgvector:pg16
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - bizosaas
            - -d
            - bizosaas
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - bizosaas
            - -d
            - bizosaas
          initialDelaySeconds: 15
          periodSeconds: 10
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: bizosaas
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None
---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: bizosaas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
# Redis PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: bizosaas
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: bizosaas
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: bizosaas/api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: NODE_ENV
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: bizosaas
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
# User Management Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-management
  template:
    metadata:
      labels:
        app: user-management
    spec:
      containers:
      - name: user-management
        image: bizosaas/user-management:latest
        ports:
        - containerPort: 8001
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "750m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
---
# User Management Service
apiVersion: v1
kind: Service
metadata:
  name: user-management-service
  namespace: bizosaas
spec:
  selector:
    app: user-management
  ports:
  - port: 8001
    targetPort: 8001
---
# Campaign Management Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: campaign-management
  namespace: bizosaas
spec:
  replicas: 3
  selector:
    matchLabels:
      app: campaign-management
  template:
    metadata:
      labels:
        app: campaign-management
    spec:
      containers:
      - name: campaign-management
        image: bizosaas/campaign-management:latest
        ports:
        - containerPort: 8002
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Campaign Management Service
apiVersion: v1
kind: Service
metadata:
  name: campaign-management-service
  namespace: bizosaas
spec:
  selector:
    app: campaign-management
  ports:
  - port: 8002
    targetPort: 8002
---
# Analytics Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
      - name: analytics
        image: bizosaas/analytics:latest
        ports:
        - containerPort: 8003
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Analytics Service
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: bizosaas
spec:
  selector:
    app: analytics
  ports:
  - port: 8003
    targetPort: 8003
---
# Integration Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: integration
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: integration
  template:
    metadata:
      labels:
        app: integration
    spec:
      containers:
      - name: integration
        image: bizosaas/integration:latest
        ports:
        - containerPort: 8004
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: ENCRYPTION_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "750m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Integration Service
apiVersion: v1
kind: Service
metadata:
  name: integration-service
  namespace: bizosaas
spec:
  selector:
    app: integration
  ports:
  - port: 8004
    targetPort: 8004
---
# Notification Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification
  template:
    metadata:
      labels:
        app: notification
    spec:
      containers:
      - name: notification
        image: bizosaas/notification:latest
        ports:
        - containerPort: 8005
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "750m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8005
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8005
          initialDelaySeconds: 30
          periodSeconds: 10
---
# Notification Service
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: bizosaas
spec:
  selector:
    app: notification
  ports:
  - port: 8005
    targetPort: 8005
---
# AI Agents Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agents
  namespace: bizosaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-agents
  template:
    metadata:
      labels:
        app: ai-agents
    spec:
      containers:
      - name: ai-agents
        image: bizosaas/ai-agents:latest
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          value: "bizosaas"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: bizosaas-config
              key: REDIS_HOST
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bizosaas-secrets
              key: JWT_SECRET_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-api-secrets
              key: OPENAI_API_KEY
              optional: true
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
---
# AI Agents Service
apiVersion: v1
kind: Service
metadata:
  name: ai-agents-service
  namespace: bizosaas
spec:
  selector:
    app: ai-agents
  ports:
  - port: 8000
    targetPort: 8000
---
# Horizontal Pod Autoscalers
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: bizosaas
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-management-hpa
  namespace: bizosaas
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-management
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: campaign-management-hpa
  namespace: bizosaas
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: campaign-management
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-agents-hpa
  namespace: bizosaas
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-agents
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
---
# Network Policies for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-default
  namespace: bizosaas
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-api-gateway
  namespace: bizosaas
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-internal-services
  namespace: bizosaas
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    - podSelector:
        matchLabels:
          tier: backend
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    - podSelector:
        matchLabels:
          app: redis
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bizosaas-ingress
  namespace: bizosaas
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.bizoholic.com
    secretName: bizosaas-tls
  rules:
  - host: api.bizoholic.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 80