#!/bin/bash

# BizOSaaS Platform - STAGING Environment Deployment Script
# Deploys all 20 containers with staging subdomains for testing

set -e

VPS_IP="194.238.16.237"
DOKPLOY_URL="http://${VPS_IP}:3000"
ENVIRONMENT="staging"

echo "üß™ BizOSaaS Platform - STAGING Environment Deployment"
echo "====================================================="
echo "Environment: $ENVIRONMENT"
echo "Target VPS: $VPS_IP"
echo "Dokploy URL: $DOKPLOY_URL"
echo "Total Containers: 20"
echo "Staging Domains: stg.bizoholic.com, stg.coreldove.com, stg.thrillring.com"
echo "Timestamp: $(date)"
echo ""

# Function to show staging domain strategy
show_staging_domains() {
    echo "üß™ STAGING DOMAIN STRATEGY:"
    echo "=========================="
    echo ""
    echo "Primary Staging Subdomains (3):"
    echo "  ‚Ä¢ stg.bizoholic.com    ‚Üí Bizoholic Marketing (Testing)"
    echo "  ‚Ä¢ stg.coreldove.com    ‚Üí CorelDove E-commerce (Testing)"
    echo "  ‚Ä¢ stg.thrillring.com   ‚Üí ThrillRing Gaming (Testing)"
    echo ""
    echo "Staging Path-Based Routes:"
    echo "  ‚Ä¢ stg.bizoholic.com/login/  ‚Üí Client Portal (Testing)"
    echo "  ‚Ä¢ stg.bizoholic.com/admin/  ‚Üí Admin Dashboard (Testing)"
    echo ""
    echo "Backend Services (Internal Only):"
    echo "  ‚Ä¢ All 14 backend + infrastructure services"
    echo "  ‚Ä¢ No external domains needed"
    echo "  ‚Ä¢ Accessible via AI Central Hub routing"
    echo ""
}

# Function to show staging benefits
show_staging_benefits() {
    echo "‚úÖ STAGING ENVIRONMENT BENEFITS:"
    echo "==============================="
    echo ""
    echo "Testing Advantages:"
    echo "  ‚Ä¢ Safe testing environment before production"
    echo "  ‚Ä¢ Real SSL certificates for HTTPS testing"
    echo "  ‚Ä¢ Complete 20-container platform functionality"
    echo "  ‚Ä¢ Performance and load testing capabilities"
    echo "  ‚Ä¢ Security testing and vulnerability assessment"
    echo ""
    echo "Development Features:"
    echo "  ‚Ä¢ DEBUG_MODE=true for detailed logging"
    echo "  ‚Ä¢ ENABLE_ANALYTICS=false to avoid test data"
    echo "  ‚Ä¢ NODE_ENV=staging for environment-specific behavior"
    echo "  ‚Ä¢ Enhanced error reporting and debugging"
    echo ""
    echo "Cost Efficiency:"
    echo "  ‚Ä¢ Uses existing VPS infrastructure"
    echo "  ‚Ä¢ Free staging subdomains"
    echo "  ‚Ä¢ Free SSL certificates (Let's Encrypt)"
    echo "  ‚Ä¢ Zero additional hosting costs"
    echo ""
}

# Function to show container breakdown
show_container_breakdown() {
    echo "üìä STAGING CONTAINER BREAKDOWN (20 Total):"
    echo "=========================================="
    echo ""
    echo "Infrastructure Services (6 containers - Internal):"
    echo "  1. PostgreSQL Database (5432) - Multi-tenant staging data"
    echo "  2. Redis Cache (6379) - Session and cache storage"
    echo "  3. HashiCorp Vault (8200) - Secrets management"
    echo "  4. Temporal Server (7233) - Workflow engine"
    echo "  5. Temporal UI (8082) - Workflow management interface"
    echo "  6. Temporal Integration (8009) - Custom workflow integration"
    echo ""
    echo "Backend Services (8 containers - Internal):"
    echo "  1. AI Central Hub (8001) - Main API coordinator and router"
    echo "  2. Django CRM (8003) - Customer relationship management"
    echo "  3. Business Directory API (8004) - Directory service backend"
    echo "  4. CorelDove E-commerce API (8005) - E-commerce backend"
    echo "  5. AI Agents Service (8010) - Multi-model AI coordination"
    echo "  6. Amazon Sourcing API (8085) - Product sourcing integration"
    echo "  7. Saleor E-commerce Engine (8000) - Advanced e-commerce platform"
    echo "  8. Wagtail CMS (8002) - Headless content management"
    echo ""
    echo "Frontend Applications (6 containers - Staging Domains):"
    echo "  1. Bizoholic Marketing (3000) ‚Üí stg.bizoholic.com"
    echo "  2. Client Portal (3001) ‚Üí stg.bizoholic.com/login/"
    echo "  3. CorelDove E-commerce (3002) ‚Üí stg.coreldove.com"
    echo "  4. Business Directory (3004) ‚Üí Internal testing"
    echo "  5. ThrillRing Gaming (3005) ‚Üí stg.thrillring.com"
    echo "  6. Admin Dashboard (3009) ‚Üí stg.bizoholic.com/admin/"
    echo ""
}

# Function to show DNS configuration
show_dns_configuration() {
    echo "üåç STAGING DNS CONFIGURATION:"
    echo "============================"
    echo ""
    echo "Required DNS Records (Point to $VPS_IP):"
    echo ""
    echo "# Add these subdomains to your DNS provider"
    echo "stg.bizoholic.com     A    $VPS_IP"
    echo "stg.coreldove.com     A    $VPS_IP"
    echo "stg.thrillring.com    A    $VPS_IP"
    echo ""
    echo "DNS Verification Commands:"
    echo "  dig stg.bizoholic.com"
    echo "  dig stg.coreldove.com"
    echo "  dig stg.thrillring.com"
    echo ""
    echo "Expected Response:"
    echo "  ;; ANSWER SECTION:"
    echo "  stg.bizoholic.com.    300    IN    A    $VPS_IP"
    echo ""
}

# Function to show deployment steps
show_deployment_steps() {
    echo "üìã STAGING DEPLOYMENT STEPS:"
    echo "============================"
    echo ""
    echo "Step 1: Configure Staging DNS"
    echo "  ‚Ä¢ Add staging subdomains to your DNS provider"
    echo "  ‚Ä¢ Wait for DNS propagation (5-30 minutes)"
    echo "  ‚Ä¢ Verify DNS resolution before proceeding"
    echo ""
    echo "Step 2: Access Dokploy Dashboard"
    echo "  ‚Ä¢ URL: $DOKPLOY_URL"
    echo "  ‚Ä¢ Login with your administrator credentials"
    echo ""
    echo "Step 3: Create Staging Projects"
    echo "  ‚Ä¢ Project 1: 'bizosaas-infrastructure-staging'"
    echo "  ‚Ä¢ Project 2: 'bizosaas-backend-staging'"
    echo "  ‚Ä¢ Project 3: 'bizosaas-frontend-staging'"
    echo ""
    echo "Step 4: Deploy Infrastructure (No External Domains)"
    echo "  ‚Ä¢ Upload: dokploy-infrastructure.yml"
    echo "  ‚Ä¢ Deploy: 6 infrastructure containers"
    echo "  ‚Ä¢ Verify: Database and cache services running"
    echo ""
    echo "Step 5: Deploy Backend Services (No External Domains)"
    echo "  ‚Ä¢ Upload: dokploy-backend.yml"
    echo "  ‚Ä¢ Deploy: 8 backend API containers"
    echo "  ‚Ä¢ Verify: AI Central Hub (8001) accessible internally"
    echo ""
    echo "Step 6: Deploy Frontend with Staging Domains"
    echo "  ‚Ä¢ Upload: dokploy-frontend-staging.yml"
    echo "  ‚Ä¢ Configure staging subdomains:"
    echo ""
    echo "    Bizoholic Staging:"
    echo "      Domain: stg.bizoholic.com"
    echo "      SSL: Enable Let's Encrypt"
    echo "      Container Port: 3000"
    echo ""
    echo "    CorelDove Staging:"
    echo "      Domain: stg.coreldove.com"
    echo "      SSL: Enable Let's Encrypt"
    echo "      Container Port: 3002"
    echo ""
    echo "    ThrillRing Staging:"
    echo "      Domain: stg.thrillring.com"
    echo "      SSL: Enable Let's Encrypt"
    echo "      Container Port: 3005"
    echo ""
    echo "    Client Portal Staging:"
    echo "      Host: stg.bizoholic.com"
    echo "      Path: /login/"
    echo "      Container Port: 3001"
    echo "      Strip Path: Yes"
    echo ""
    echo "    Admin Dashboard Staging:"
    echo "      Host: stg.bizoholic.com"
    echo "      Path: /admin/"
    echo "      Container Port: 3009"
    echo "      Strip Path: Yes"
    echo ""
}

# Function to show testing procedures
show_testing_procedures() {
    echo "üß™ STAGING TESTING PROCEDURES:"
    echo "============================="
    echo ""
    echo "Functional Testing Checklist:"
    echo "  ‚ñ° Marketing website: https://stg.bizoholic.com"
    echo "  ‚ñ° E-commerce store: https://stg.coreldove.com"
    echo "  ‚ñ° Gaming platform: https://stg.thrillring.com"
    echo "  ‚ñ° Client portal: https://stg.bizoholic.com/login/"
    echo "  ‚ñ° Admin dashboard: https://stg.bizoholic.com/admin/"
    echo ""
    echo "Technical Verification:"
    echo "  ‚ñ° All 20 containers running and healthy"
    echo "  ‚ñ° SSL certificates active on all staging domains"
    echo "  ‚ñ° API routing through AI Central Hub functioning"
    echo "  ‚ñ° Database connectivity and CRUD operations"
    echo "  ‚ñ° Authentication and authorization flows"
    echo ""
    echo "Performance Testing:"
    echo "  ‚ñ° Page load times < 3 seconds"
    echo "  ‚ñ° API response times < 500ms"
    echo "  ‚ñ° Database query performance acceptable"
    echo "  ‚ñ° Image and asset optimization verified"
    echo "  ‚ñ° Mobile responsiveness on all devices"
    echo ""
    echo "Security Testing:"
    echo "  ‚ñ° HTTPS enforced on all staging domains"
    echo "  ‚ñ° Path traversal and injection protection"
    echo "  ‚ñ° Authentication security measures"
    echo "  ‚ñ° API rate limiting and validation"
    echo "  ‚ñ° Cross-site scripting (XSS) prevention"
    echo ""
}

# Function to show staging to production migration
show_production_migration() {
    echo "üöÄ STAGING TO PRODUCTION MIGRATION:"
    echo "=================================="
    echo ""
    echo "Pre-Production Checklist:"
    echo "  ‚ñ° All staging tests passed successfully"
    echo "  ‚ñ° Performance benchmarks met"
    echo "  ‚ñ° Security audit completed"
    echo "  ‚ñ° Load testing results acceptable"
    echo "  ‚ñ° User acceptance testing approved"
    echo ""
    echo "Production Migration Process:"
    echo "  1. Backup current production (if any)"
    echo "  2. Update DNS for production domains:"
    echo "     ‚Ä¢ bizoholic.com ‚Üí $VPS_IP"
    echo "     ‚Ä¢ coreldove.com ‚Üí $VPS_IP"
    echo "     ‚Ä¢ thrillring.com ‚Üí $VPS_IP"
    echo "  3. Deploy production configuration"
    echo "  4. Switch environment variables from staging to production"
    echo "  5. Enable production analytics and monitoring"
    echo "  6. Verify production functionality"
    echo "  7. Monitor for 24-48 hours"
    echo ""
    echo "Domain Migration Mapping:"
    echo "  stg.bizoholic.com ‚Üí bizoholic.com"
    echo "  stg.coreldove.com ‚Üí coreldove.com"
    echo "  stg.thrillring.com ‚Üí thrillring.com"
    echo "  stg.bizoholic.com/login/ ‚Üí bizoholic.com/login/"
    echo "  stg.bizoholic.com/admin/ ‚Üí bizoholic.com/admin/"
    echo ""
}

# Function to show files included
show_files_included() {
    echo "üìÅ STAGING DEPLOYMENT FILES:"
    echo "==========================="
    echo ""
    echo "Docker Compose Configurations:"
    echo "  ‚Ä¢ dokploy-infrastructure.yml (6 infrastructure containers)"
    echo "  ‚Ä¢ dokploy-backend.yml (8 backend service containers)"
    echo "  ‚Ä¢ dokploy-frontend-staging.yml (6 frontend staging containers)"
    echo ""
    echo "Deployment Scripts:"
    echo "  ‚Ä¢ deploy-staging-to-dokploy.sh (this comprehensive guide)"
    echo "  ‚Ä¢ health-check-staging.sh (staging environment verification)"
    echo ""
    echo "Configuration Files:"
    echo "  ‚Ä¢ .env.staging (staging environment variables)"
    echo "  ‚Ä¢ staging-test-suite.sh (automated testing script)"
    echo ""
    echo "Documentation:"
    echo "  ‚Ä¢ STAGING_DOMAIN_STRATEGY.md (complete staging strategy)"
    echo "  ‚Ä¢ DEPLOYMENT_ANALYSIS_REPORT.md (deployment analysis)"
    echo "  ‚Ä¢ CORRECTED_DOMAIN_STRATEGY.md (original domain corrections)"
    echo ""
}

# Main execution function
main() {
    show_staging_domains
    show_staging_benefits
    show_container_breakdown
    show_dns_configuration
    show_deployment_steps
    show_testing_procedures
    show_production_migration
    show_files_included

    echo "üéØ STAGING DEPLOYMENT SUMMARY:"
    echo "============================="
    echo ""
    echo "‚úÖ Environment: STAGING (Safe Testing)"
    echo "‚úÖ Container Count: 20/20 confirmed and ready"
    echo "‚úÖ Staging Domains: stg.bizoholic.com, stg.coreldove.com, stg.thrillring.com"
    echo "‚úÖ Path Routing: /login/ and /admin/ configured"
    echo "‚úÖ SSL Strategy: Automatic Let's Encrypt for realistic testing"
    echo "‚úÖ Testing Framework: Comprehensive validation procedures"
    echo "‚úÖ Migration Plan: Clear path to production deployment"
    echo ""
    echo "üß™ Ready for staging deployment and comprehensive testing!"
    echo ""
    echo "Next Steps:"
    echo "1. Configure staging DNS for the 3 subdomains"
    echo "2. Access Dokploy at $DOKPLOY_URL"
    echo "3. Follow the deployment steps above"
    echo "4. Execute comprehensive testing procedures"
    echo "5. Plan production migration based on staging results"
    echo ""
    echo "Expected Staging Result:"
    echo "‚Ä¢ All 20 containers operational in staging environment"
    echo "‚Ä¢ 3 staging subdomains with SSL certificates"
    echo "‚Ä¢ Path-based routing for portal/admin testing"
    echo "‚Ä¢ Complete BizOSaaS platform ready for validation"
    echo "‚Ä¢ Clear migration path to production"
    echo ""
    echo "Cost: $0 (uses existing infrastructure + free subdomains)"
    echo "Timeline: 1-2 weeks of thorough testing before production"
    echo ""
}

# Execute main function
main "$@"