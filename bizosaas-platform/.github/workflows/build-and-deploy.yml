name: Build and Deploy to GHCR

on:
  push:
    branches:
      - main
    paths:
      - 'ai/services/bizosaas-brain/**'
      - 'backend/services/cms/**'
      - 'backend/services/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: bizoholic-digital

jobs:
  build-brain-gateway:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bizosaas-brain-gateway
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=staging,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push brain-gateway image
        uses: docker/build-push-action@v5
        with:
          context: ./ai/services/bizosaas-brain
          file: ./ai/services/bizosaas-brain/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-wagtail-cms:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/bizosaas-wagtail-cms
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=staging,enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push wagtail-cms image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/services/cms
          file: ./backend/services/cms/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-staging:
    needs: [build-brain-gateway, build-wagtail-cms]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Trigger Dokploy deployment for brain-gateway
        run: |
          curl -X POST "https://dk.bizoholic.com/api/trpc/application.deploy" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"json":{"applicationId":"RcsNKWAegIed2ia0v4SjG"}}'

      - name: Trigger Dokploy deployment for wagtail-cms
        run: |
          curl -X POST "https://dk.bizoholic.com/api/trpc/application.deploy" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"json":{"applicationId":"6AHbk_ligBC1WY0ol-h_t"}}'

      - name: Wait for deployments to complete
        run: sleep 120

      - name: Verify brain-gateway deployment
        run: |
          STATUS=$(curl -s "https://dk.bizoholic.com/api/trpc/application.one?input=%7B%22json%22%3A%7B%22applicationId%22%3A%22RcsNKWAegIed2ia0v4SjG%22%7D%7D" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" | jq -r '.result.data.json.applicationStatus')
          echo "Brain-gateway status: $STATUS"
          if [ "$STATUS" != "done" ]; then
            echo "::warning::Brain-gateway deployment not complete. Status: $STATUS"
          fi

      - name: Verify wagtail-cms deployment
        run: |
          STATUS=$(curl -s "https://dk.bizoholic.com/api/trpc/application.one?input=%7B%22json%22%3A%7B%22applicationId%22%3A%226AHbk_ligBC1WY0ol-h_t%22%7D%7D" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" | jq -r '.result.data.json.applicationStatus')
          echo "Wagtail-cms status: $STATUS"
          if [ "$STATUS" != "done" ]; then
            echo "::warning::Wagtail-cms deployment not complete. Status: $STATUS"
          fi
