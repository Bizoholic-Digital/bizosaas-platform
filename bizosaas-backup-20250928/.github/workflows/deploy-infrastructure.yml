name: Deploy Shared Infrastructure

on:
  push:
    branches: [main, staging]
    paths: 
      - 'infrastructure/**'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:

env:
  DOKPLOY_URL: ${{ secrets.DOKPLOY_URL }}
  DOKPLOY_TOKEN: ${{ secrets.DOKPLOY_TOKEN }}

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ secrets.DOKPLOY_INFRASTRUCTURE_PROD_ID }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV  
            echo "PROJECT_ID=${{ secrets.DOKPLOY_INFRASTRUCTURE_STAGING_ID }}" >> $GITHUB_ENV
          fi

      - name: Deploy to Dokploy
        run: |
          curl -X POST \
            "${{ env.DOKPLOY_URL }}/api/projects/${{ env.PROJECT_ID }}/deploy" \
            -H "Authorization: Bearer ${{ env.DOKPLOY_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "buildArgs": {
                "ENVIRONMENT": "${{ env.ENVIRONMENT }}"
              }
            }'

      - name: Wait for deployment
        run: |
          echo "Waiting for infrastructure deployment to complete..."
          sleep 60
          
          # Check deployment status
          STATUS=$(curl -s \
            "${{ env.DOKPLOY_URL }}/api/projects/${{ env.PROJECT_ID }}/status" \
            -H "Authorization: Bearer ${{ env.DOKPLOY_TOKEN }}" | \
            jq -r '.status')
          
          if [[ "$STATUS" == "running" ]]; then
            echo "‚úÖ Infrastructure deployment successful"
          else
            echo "‚ùå Infrastructure deployment failed"
            exit 1
          fi

      - name: Health check
        run: |
          # Test database connectivity
          echo "Testing shared infrastructure health..."
          
          # Basic connectivity tests (adjust URLs based on your setup)
          curl -f "${{ secrets.POSTGRES_HEALTH_URL }}" || echo "Warning: PostgreSQL health check failed"
          curl -f "${{ secrets.REDIS_HEALTH_URL }}" || echo "Warning: Redis health check failed"
          curl -f "${{ secrets.TEMPORAL_HEALTH_URL }}" || echo "Warning: Temporal health check failed"

      - name: Notify deployment
        if: always()
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "üöÄ Infrastructure deployment completed successfully"
            # Add notification logic here (Slack, Discord, etc.)
          else
            echo "üí• Infrastructure deployment failed"
            # Add failure notification logic here
          fi