name: Deploy to Staging

on:
  push:
    branches: [staging, main]
    paths:
      - 'bizosaas/**'
      - 'dokploy-*-ghcr.yml'
      - '.github/workflows/**'

env:
  REGISTRY: ghcr.io
  ORG_NAME: bizoholic-digital

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          # Backend Services
          - name: brain-gateway
            context: ./bizosaas/ai/services/bizosaas-brain
            dockerfile: Dockerfile
          - name: bizoholic-frontend
            context: ./bizosaas/frontend/apps/bizoholic-frontend
            dockerfile: Dockerfile.production
          - name: coreldove-frontend
            context: ./bizosaas/frontend/apps/coreldove-frontend
            dockerfile: Dockerfile.production
          - name: client-portal
            context: ./bizosaas/frontend/apps/client-portal
            dockerfile: Dockerfile.production
          - name: admin-dashboard
            context: ./bizosaas/frontend/apps/bizosaas-admin
            dockerfile: Dockerfile.production
          - name: business-directory-frontend
            context: ./bizosaas/frontend/apps/business-directory-frontend
            dockerfile: Dockerfile.production
          - name: thrillring-gaming
            context: ./bizosaas/frontend/apps/thrillring-gaming
            dockerfile: Dockerfile.production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.ORG_NAME }}/bizosaas-${{ matrix.name }}
          tags: |
            type=ref,event=branch,suffix=-{{sha}}
            type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,prefix=staging-

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy-to-dokploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'

    steps:
      - name: Wait for images to be available
        run: sleep 30

      - name: Deploy Backend to Dokploy
        run: |
          curl -X POST "https://dk.bizoholic.com/api/compose.deploy" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"composeId": "uimFISkhg1KACigb2CaGz"}'

      - name: Wait for Backend to be healthy
        run: sleep 60

      - name: Deploy Frontend to Dokploy
        run: |
          curl -X POST "https://dk.bizoholic.com/api/compose.deploy" \
            -H "x-api-key: ${{ secrets.DOKPLOY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"composeId": "hU2yhYOqv3_ftKGGvcAiv"}'

      - name: Deployment complete
        run: |
          echo "âœ… Deployment triggered successfully"
          echo "Monitor at: https://dk.bizoholic.com"
