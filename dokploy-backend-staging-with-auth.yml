# BizOSaaS Backend Services - STAGING (Complete - Build from GitHub)
# All 9 backend services building directly from repository
# No registry authentication required

services:
  # ==========================================
  # 1. SALEOR E-COMMERCE API
  # Complete e-commerce platform
  # ==========================================
  saleor-api:
    image: ghcr.io/saleor/saleor:3.20
    container_name: bizosaas-saleor-staging
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/saleor_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/1
      - SECRET_KEY=staging-secret-key-saleor-bizosaas-2025
      - ALLOWED_HOSTS=194.238.16.237,localhost,stg.coreldove.com
      - ALLOWED_CLIENT_HOSTS=194.238.16.237,localhost,stg.coreldove.com
      - DEBUG=False
      - ENABLE_ACCOUNT_CONFIRMATION_BY_EMAIL=False
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 2. BRAIN API (AI GATEWAY)
  # Central AI orchestration hub
  # ==========================================
  brain-api:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/ai/services/bizosaas-brain
      dockerfile: Dockerfile
    container_name: bizosaas-brain-staging
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ENVIRONMENT=staging
      - LOG_LEVEL=INFO
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 3. WAGTAIL CMS
  # Content management system
  # ==========================================
  wagtail-cms:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/cms
      dockerfile: Dockerfile
    container_name: bizosaas-wagtail-staging
    ports:
      - "8002:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=wagtail_cms.settings.production
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/3
      - SECRET_KEY=staging-secret-key-wagtail-bizosaas-2025
      - ALLOWED_HOSTS=194.238.16.237,localhost,stg.bizoholic.com
      - DEBUG=False
      - PYTHONPATH=/app
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/login/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 4. DJANGO CRM
  # Customer relationship management
  # ==========================================
  django-crm:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/crm/django-crm
      dockerfile: Dockerfile
    container_name: bizosaas-django-crm-staging
    ports:
      - "8003:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=crm_project.settings.production
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/4
      - SECRET_KEY=staging-secret-key-djangocrm-bizosaas-2025
      - ALLOWED_HOSTS=194.238.16.237,localhost,stg.bizoholic.com
      - DEBUG=False
      - PYTHONPATH=/app
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/login/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 5. BUSINESS DIRECTORY BACKEND
  # Business listings and directory management
  # ==========================================
  business-directory-backend:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/crm/business-directory
      dockerfile: Dockerfile
    container_name: bizosaas-business-directory-staging
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/5
      - SECRET_KEY=staging-secret-key-bizdir-bizosaas-2025
      - ENVIRONMENT=staging
      - LOG_LEVEL=INFO
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  # ==========================================
  # 6. AUTHENTICATION SERVICE
  # Centralized authentication and authorization
  # ==========================================
  auth-service:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/auth
      dockerfile: Dockerfile
    container_name: bizosaas-auth-service-staging
    ports:
      - "8006:8006"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/10
      - SECRET_KEY=staging-secret-key-auth-bizosaas-2025-v1
      - JWT_SECRET=staging-jwt-secret-bizosaas-2025-secure
      - ENVIRONMENT=staging
      - PORT=8006
      - ALLOWED_ORIGINS=*
      - LOG_LEVEL=INFO
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 10. CORELDOVE BACKEND
  # E-commerce backend for CorelDove
  # ==========================================
  coreldove-backend:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas/ecommerce/services/coreldove-backend
      dockerfile: Dockerfile
    container_name: bizosaas-coreldove-backend-staging
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/6
      - SALEOR_API_URL=http://bizosaas-saleor-staging:8000/graphql/
      - SECRET_KEY=staging-secret-key-coreldove-bizosaas-2025
      - ENVIRONMENT=staging
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 10. TEMPORAL INTEGRATION
  # Workflow orchestration service
  # ==========================================
  temporal-integration:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/temporal
      dockerfile: Dockerfile
    container_name: bizosaas-temporal-integration-staging
    ports:
      - "8007:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/7
      - TEMPORAL_HOST=bizosaas-temporal-server-staging
      - TEMPORAL_PORT=7233
      - ENVIRONMENT=staging
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 10. AI AGENTS
  # Specialized AI agent services
  # ==========================================
  ai-agents:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/ai-agents
      dockerfile: Dockerfile
    container_name: bizosaas-ai-agents-staging
    ports:
      - "8008:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/8
      - BRAIN_API_URL=http://bizosaas-brain-staging:8001
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ENVIRONMENT=staging
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # 10. AMAZON SOURCING
  # Product sourcing from Amazon
  # ==========================================
  amazon-sourcing:
    build:
      context: https://github.com/Bizoholic-Digital/bizosaas-platform.git#main:bizosaas-platform/backend/services/amazon-sourcing
      dockerfile: Dockerfile
    container_name: bizosaas-amazon-sourcing-staging
    ports:
      - "8009:8000"
    environment:
      - DATABASE_URL=postgresql://admin:BizOSaaS2025!StagingDB@bizosaas-postgres-staging:5432/bizosaas_staging
      - REDIS_URL=redis://bizosaas-redis-staging:6379/9
      - SALEOR_API_URL=http://bizosaas-saleor-staging:8000/graphql/
      - AMAZON_ACCESS_KEY=${AMAZON_ACCESS_KEY:-}
      - AMAZON_SECRET_KEY=${AMAZON_SECRET_KEY:-}
      - ENVIRONMENT=staging
    networks:
      - dokploy-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ==========================================
# SHARED CONFIGURATION
# ==========================================
networks:
  dokploy-network:
    external: true

# ==================================================
# BACKEND PROJECT SUMMARY (Build from GitHub):
# ==================================================
# Container Count: 9 (complete backend stack)
# Build Strategy: All build directly from GitHub repository
# No Registry Required: No authentication needed
# External Ports: 8000-8009
# Dependencies: PostgreSQL (5433), Redis (6380) from infrastructure
# Services:
#   1. Saleor (8000) - E-commerce platform
#   2. Brain API (8001) - AI orchestration hub
#   3. Wagtail (8002) - CMS
#   4. Django CRM (8003) - Customer management
#   5. Business Directory (8004) - Directory listings
#   6. CorelDove Backend (8005) - E-commerce bridge
#   7. Temporal Integration (8007) - Workflow service
#   8. AI Agents (8008) - Specialized AI services
#   9. Amazon Sourcing (8009) - Product sourcing
# ==================================================

# ==================================================
# UPDATED SUMMARY (WITH AUTH SERVICE):
# ==================================================
# Container Count: 10 (complete backend stack + auth)
# Build Strategy: All build directly from GitHub repository
# No Registry Required: No authentication needed
# External Ports: 8000-8009 (8006 added for Auth)
# Dependencies: PostgreSQL (5433), Redis (6380) from infrastructure
# Services:
#   1. Saleor (8000) - E-commerce platform
#   2. Brain API (8001) - AI orchestration hub
#   3. Wagtail (8002) - CMS
#   4. Django CRM (8003) - Customer management
#   5. Business Directory Backend (8004) - Directory listings API
#   6. Auth Service (8006) - **NEWLY ADDED** - FastAPI-Users SSO
#   7. CorelDove Backend (8005) - E-commerce bridge [renumbered]
#   8. Temporal Integration (8007) - Workflow service [renumbered]
#   9. AI Agents (8008) - Specialized AI services [renumbered]
#   10. Amazon Sourcing (8009) - Product sourcing [renumbered]
# ==================================================
